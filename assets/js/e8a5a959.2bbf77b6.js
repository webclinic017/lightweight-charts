"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["91743"],{57981:function(e,t,n){n.r(t),n.d(t,{default:()=>h,frontMatter:()=>r,metadata:()=>a,assets:()=>c,toc:()=>l,contentTitle:()=>o});var a=JSON.parse('{"id":"a11y/screenreader","title":"Screen Readers","description":"In this section we will add screen reader support to the chart.","source":"@site/tutorials/a11y/screenreader.mdx","sourceDirName":"a11y","slug":"/a11y/screenreader","permalink":"/lightweight-charts/tutorials/a11y/screenreader","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Screen Readers","pagination_title":"Screen Readers","title":"Screen Readers","description":"In this section we will add screen reader support to the chart.","keywords":["a11y","accessibility","screenreaders","keyboard","assistive"],"pagination_prev":"a11y/keyboard","pagination_next":"a11y/readability"},"sidebar":"tutorialsSidebar","previous":{"title":"Keyboard navigation","permalink":"/lightweight-charts/tutorials/a11y/keyboard"},"next":{"title":"Readability","permalink":"/lightweight-charts/tutorials/a11y/readability"}}'),i=n("85893"),s=n("50065");let r={sidebar_position:2,sidebar_label:"Screen Readers",pagination_title:"Screen Readers",title:"Screen Readers",description:"In this section we will add screen reader support to the chart.",keywords:["a11y","accessibility","screenreaders","keyboard","assistive"],pagination_prev:"a11y/keyboard",pagination_next:"a11y/readability"},o="Integrating ARIA roles and descriptive content for enhanced accessibility",c={},l=[{value:"Use of ARIA attributes in the chart",id:"use-of-aria-attributes-in-the-chart",level:2},{value:"aria-live",id:"aria-live",level:3},{value:"aria-label",id:"aria-label",level:3},{value:"aria-hidden",id:"aria-hidden",level:3},{value:"Adding the ARIA attributes to an existing chart via JavaScript",id:"adding-the-aria-attributes-to-an-existing-chart-via-javascript",level:3},{value:"Generating a description of the chart",id:"generating-a-description-of-the-chart",level:2},{value:"Semantic HTML",id:"semantic-html",level:2}];function d(e){let t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"integrating-aria-roles-and-descriptive-content-for-enhanced-accessibility",children:"Integrating ARIA roles and descriptive content for enhanced accessibility"})}),"\n",(0,i.jsxs)(t.p,{children:["Accessibility in web development extends beyond just accommodating keyboard-only\nusers. Many users with varying abilities make use of assistive technologies like\nscreen readers to effectively interact with web applications.\n",(0,i.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA",children:"ARIA"}),"\n(Accessible Rich Internet Applications) roles and states offer a powerful\ntoolkit to improve this interaction by conveying information about the behavior\nand purpose of interface components."]}),"\n",(0,i.jsx)(t.p,{children:"In the context of our line chart, we'll be looking at how to implement ARIA\nattributes to further enhance its accessibility in addition to generating\ndescriptive content for our graph."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["In this tutorial we will only make use of\nthe ",(0,i.jsx)(t.code,{children:"aria-live"}),", ",(0,i.jsx)(t.code,{children:"aria-label"}),", and ",(0,i.jsx)(t.code,{children:"aria-hidden"})," attributes. You can explore\na [more comprehensive list of attributes on this MDN page]\n(",(0,i.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",children:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes"}),")."]})}),"\n",(0,i.jsx)(t.h2,{id:"use-of-aria-attributes-in-the-chart",children:"Use of ARIA attributes in the chart"}),"\n",(0,i.jsx)(t.h3,{id:"aria-live",children:"aria-live"}),"\n",(0,i.jsxs)(t.p,{children:["To provide real-time updates about the chart to assistive technologies, we use\nthe ",(0,i.jsx)(t.code,{children:"aria-live"})," attribute. It accepts a few potential values, although\n",(0,i.jsx)(t.code,{children:'"polite"'})," and ",(0,i.jsx)(t.code,{children:'"assertive"'})," are the most common."]}),"\n",(0,i.jsxs)(t.p,{children:["With ",(0,i.jsx)(t.code,{children:'aria-live="polite"'}),", updates are presented at the user's next convenient\nopportunity, such as when they stop typing or when a task is completed. With\n",(0,i.jsx)(t.code,{children:'aria-live="assertive"'}),", updates are presented immediately."]}),"\n",(0,i.jsxs)(t.p,{children:["Our chart uses the ",(0,i.jsx)(t.code,{children:'"assertive"'})," value because the description should be read\nout based on a user action (keyboard action):"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",children:'<div id="chart" aria-live="assertive" tabindex="0"></div>\n'})}),"\n",(0,i.jsx)(t.h3,{id:"aria-label",children:"aria-label"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"aria-label"})," attribute is used to specify a string that labels the current\nelement. It's useful when there isn't any text content that describes this\nelement."]}),"\n",(0,i.jsx)(t.p,{children:"On our chart, it could read something like this:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",children:'<div\n    id="chart"\n    aria-live="polite"\n    aria-label="interactive line chart"\n    tabindex="0"\n></div>\n'})}),"\n",(0,i.jsx)(t.h3,{id:"aria-hidden",children:"aria-hidden"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"aria-hidden"}),' attribute is used to hide irrelevant or redundant\ninformation from assistive technologies. Its value is either "true" or "false".']}),"\n",(0,i.jsxs)(t.p,{children:["For example, if our chart contained a decorative element with no semantic\nmeaning, we could use ",(0,i.jsx)(t.code,{children:'aria-hidden="true"'})," to hide it from screen readers:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",children:'<div id="decorative-element" aria-hidden="true"></div>\n'})}),"\n",(0,i.jsx)(t.h3,{id:"adding-the-aria-attributes-to-an-existing-chart-via-javascript",children:"Adding the ARIA attributes to an existing chart via JavaScript"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",children:"\x3c!-- Template for HTML elements added to the chart container for the A11y improvements --\x3e\n<template id=\"a11y-helpers\">\n    <div tabindex=\"-1\" role=\"alert\" aria-live=\"assertive\"></div>\n</template>\n\n<script>\n    function addAriaAttributesAndAlerter(chart) {\n        const containerEl = chart.chartElement().parentElement;\n        if (!containerEl) return;\n        // make focusable\n        containerEl.tabIndex = 0;\n        containerEl.style.position = 'relative';\n        containerEl.ariaLabel =\n            'Line plot of Accessibility stock price. Press the H key to display the available interaction keys.';\n        chart.chartElement().ariaHidden = 'true';\n\n        const templateElement = document.getElementById('a11y-helpers');\n        const clone = templateElement.content.cloneNode(true);\n        containerEl.appendChild(clone);\n    }\n<\/script>\n"})}),"\n",(0,i.jsx)(t.h2,{id:"generating-a-description-of-the-chart",children:"Generating a description of the chart"}),"\n",(0,i.jsx)(t.p,{children:"In addition to ARIA roles, providing a textual description for our charts helps\nall users, especially those relying on screen readers or other assistive\ntechnologies."}),"\n",(0,i.jsx)(t.p,{children:"You may generate a description of a chart by applying domain-specific knowledge.\nIt's beneficial to outline the general trend or patterns of the data, highlight\nany notable points or anomalies, and summarize the implications of the data."}),"\n",(0,i.jsx)(t.p,{children:"You can add a descriptive section to the chart:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",children:'<div id="chart-description" aria-live="assertive">\n    \x3c!-- The content here should be dynamically generated based on the chart data --\x3e\n</div>\n'})}),"\n",(0,i.jsx)(t.p,{children:"You can use JavaScript to change the content inside this div whenever the chart\ndata is updated:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"const descriptionElement = document.getElementById('chart-description');\ndescriptionElement.textContent = generateDescription(mainSeries.data());\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Here, ",(0,i.jsx)(t.code,{children:"generateDescription(data)"})," would be a function that you write to\ntranslate the chart's data into human-readable insights. The function would vary\ngreatly based on what the charts represent and how much detail you wish to\nprovide."]}),"\n",(0,i.jsx)(t.p,{children:"The example describes the chart based on its first and last visible data\npoints in addition to the highest and lowest points displayed. This is used to\ngenerate a description like this:"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"The first price is $679.10 at Wed Sep 19 2018. The last price is $555.37 at\nWed May 15 2019. The actual change in price was -$123.73, corresponding to a\npercentage change of -18.22%. The lowest price was $32.76 at Fri Dec 21 2018.\nThe highest price was $951.33 at Sun Mar 24 2019."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The following code could be used as a starting point for generating chart\ndescriptions:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"function formatDate(time) {\n    return new Date(time * 1000).toDateString();\n}\n\nfunction formatValue(value) {\n    return `${value < 0 ? '-' : ''}$${Math.abs(value).toFixed(2)}`;\n}\n\nfunction getStats(data) {\n    const stats = {\n        start: data[0],\n        close: data[data.length - 1],\n        low: data[0],\n        high: data[0],\n    };\n\n    for (const point of data) {\n        if (point.value > stats.high.value) {\n            stats.high = point;\n        }\n        if (point.value < stats.low.value) {\n            stats.low = point;\n        }\n    }\n\n    return stats;\n}\n\nfunction getVisibleSeriesData(chart, series) {\n    const timeScale = chart.timeScale();\n    const visibleRange = timeScale.getVisibleLogicalRange();\n    const data = [];\n    for (let i = Math.round(visibleRange.from); i <= visibleRange.to; i++) {\n        const d = series.dataByIndex(i, 0);\n        if (d !== null) {\n            data.push(d);\n        }\n    }\n    return data;\n}\n\nfunction describeFinanceChart(data) {\n    if (!data || data.length === 0) {\n        return 'The data set is empty.';\n    }\n\n    const stats = getStats(data);\n\n    const firstPrice = `The first price is ${formatValue(\n        stats.start.value\n    )} at ${formatDate(stats.start.time)}.`;\n    const lastPrice = `The last price is ${formatValue(\n        stats.close.value\n    )} at ${formatDate(stats.close.time)}.`;\n\n    const actualChange = stats.close.value - stats.start.value;\n    const percentChange = (actualChange / stats.start.value) * 100;\n\n    const changeDescription = `The actual change in price was ${formatValue(\n        actualChange\n    )}, corresponding to a percentage change of ${percentChange.toFixed(2)}%.`;\n\n    let lowHigh = '';\n    if (\n        stats.low.time !== stats.start.time &&\n        stats.low.time !== stats.close.time\n    ) {\n        lowHigh += `The lowest price was ${formatValue(\n            stats.low.value\n        )} at ${formatDate(stats.low.time)}.`;\n    }\n    if (\n        stats.high.time !== stats.start.time &&\n        stats.high.time !== stats.close.time\n    ) {\n        lowHigh += ` The highest price was ${formatValue(\n            stats.high.value\n        )} at ${formatDate(stats.high.time)}.`;\n    }\n\n    return `${firstPrice} ${lastPrice} ${changeDescription} ${lowHigh}`.trim();\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"semantic-html",children:"Semantic HTML"}),"\n",(0,i.jsxs)(t.p,{children:["Using\n",(0,i.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Glossary/Semantics#semantics_in_html",children:"Semantic HTML"}),"\nelements offers several benefits. Firstly, they enhance the accessibility of web\ncontent as they provide specific meaning to the browser and assistive technology\nlike screen readers, helping them understand the content's structure and\npurpose. This is crucial for users with disabilities."]}),"\n",(0,i.jsxs)(t.p,{children:["It is suggested that the container provided to the ",(0,i.jsx)(t.code,{children:"createChart"})," method should\nuse a semantic element such as ",(0,i.jsx)(t.code,{children:"<figure>"})," instead of a generic element like\n",(0,i.jsx)(t.code,{children:"div"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",children:'<figure id="chart"></figure>\n'})}),"\n",(0,i.jsx)(t.p,{children:"In the next part, we'll discuss contrast control and font scaling."})]})}function h(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return r}});var a=n(67294);let i={},s=a.createContext(i);function r(e){let t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);