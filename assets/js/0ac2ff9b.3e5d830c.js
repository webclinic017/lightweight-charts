"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["21677"],{85713:function(e,a,n){n.r(a),n.d(a,{default:()=>d,frontMatter:()=>l,metadata:()=>t,assets:()=>r,toc:()=>c,contentTitle:()=>o});var t=JSON.parse('{"id":"api/type-aliases/LogicalRange","title":"Type alias: LogicalRange","description":"LogicalRange: IRange \\\\","source":"@site/versioned_docs/version-5.0/api/type-aliases/LogicalRange.md","sourceDirName":"api/type-aliases","slug":"/api/type-aliases/LogicalRange","permalink":"/lightweight-charts/docs/api/type-aliases/LogicalRange","draft":false,"unlisted":false,"tags":[],"version":"5.0","frontMatter":{"pagination_next":null,"pagination_prev":null},"sidebar":"typedocSidebar"}'),i=n("85893"),s=n("50065");let l={pagination_next:null,pagination_prev:null},o="Type alias: LogicalRange",r={},c=[];function h(e){let a={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.header,{children:(0,i.jsx)(a.h1,{id:"type-alias-logicalrange",children:"Type alias: LogicalRange"})}),"\n",(0,i.jsxs)(a.blockquote,{children:["\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.strong,{children:"LogicalRange"}),": ",(0,i.jsx)(a.a,{href:"/lightweight-charts/docs/api/interfaces/IRange",children:(0,i.jsx)(a.code,{children:"IRange"})})," <",(0,i.jsx)(a.a,{href:"/lightweight-charts/docs/api/type-aliases/Logical",children:(0,i.jsx)(a.code,{children:"Logical"})}),">"]}),"\n"]}),"\n",(0,i.jsxs)(a.p,{children:["A logical range is an object with 2 properties: ",(0,i.jsx)(a.code,{children:"from"})," and ",(0,i.jsx)(a.code,{children:"to"}),", which are numbers and represent logical indexes on the time scale."]}),"\n",(0,i.jsx)(a.p,{children:"The starting point of the time scale's logical range is the first data item among all series.\nBefore that point all indexes are negative, starting from that point - positive."}),"\n",(0,i.jsx)(a.p,{children:"Indexes might have fractional parts, for instance 4.2, due to the time-scale being continuous rather than discrete."}),"\n",(0,i.jsxs)(a.p,{children:["Integer part of the logical index means index of the fully visible bar.\nThus, if we have 5.2 as the last visible logical index (",(0,i.jsx)(a.code,{children:"to"})," field), that means that the last visible bar has index 5, but we also have partially visible (for 20%) 6th bar.\nHalf (e.g. 1.5, 3.5, 10.5) means exactly a middle of the bar."]})]})}function d(e={}){let{wrapper:a}={...(0,s.a)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},50065:function(e,a,n){n.d(a,{Z:function(){return o},a:function(){return l}});var t=n(67294);let i={},s=t.createContext(i);function l(e){let a=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);