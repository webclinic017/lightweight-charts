"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["8956"],{79793:function(e,n,a){a.r(n),a.d(n,{default:()=>p,frontMatter:()=>l,metadata:()=>s,assets:()=>o,toc:()=>c,contentTitle:()=>r});var s=JSON.parse('{"id":"api/type-aliases/Nominal","title":"Type alias: Nominal\\\\<T, Name\\\\>","description":"Nominal\\\\: T & object","source":"@site/versioned_docs/version-4.2/api/type-aliases/Nominal.md","sourceDirName":"api/type-aliases","slug":"/api/type-aliases/Nominal","permalink":"/lightweight-charts/docs/4.2/api/type-aliases/Nominal","draft":false,"unlisted":false,"tags":[],"version":"4.2","frontMatter":{"pagination_next":null,"pagination_prev":null},"sidebar":"apiSidebar"}'),t=a("85893"),i=a("50065");let l={pagination_next:null,pagination_prev:null},r="Type alias: Nominal<T, Name>",o={},c=[{value:"Examples",id:"examples",level:2},{value:"Type declaration",id:"type-declaration",level:2},{value:"[species]",id:"species",level:3},{value:"Type parameters",id:"type-parameters",level:2}];function d(e){let n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"type-alias-nominalt-name",children:"Type alias: Nominal<T, Name>"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Nominal"}),"<",(0,t.jsx)(n.code,{children:"T"}),", ",(0,t.jsx)(n.code,{children:"Name"}),">: ",(0,t.jsx)(n.code,{children:"T"})," & ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This is the generic type useful for declaring a nominal type,\nwhich does not structurally matches with the base type and\nthe other types declared over the same base type"}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type Index = Nominal<number, 'Index'>;\n// let i: Index = 42; // this fails to compile\nlet i: Index = 42 as Index; // OK\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type TagName = Nominal<string, 'TagName'>;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(n.h3,{id:"species",children:"[species]"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"[species]"}),": ",(0,t.jsx)(n.code,{children:"Name"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The 'name' or species of the nominal."}),"\n",(0,t.jsx)(n.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"T"})]}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"Name"})," ",(0,t.jsx)(n.em,{children:"extends"})," ",(0,t.jsx)(n.code,{children:"string"})]})]})}function p(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},50065:function(e,n,a){a.d(n,{Z:function(){return r},a:function(){return l}});var s=a(67294);let t={},i=s.createContext(t);function l(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);