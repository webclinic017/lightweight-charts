"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["17961"],{94572:function(e,t,s){s.r(t),s.d(t,{default:()=>d,frontMatter:()=>i,metadata:()=>n,assets:()=>o,toc:()=>u,contentTitle:()=>a});var n=JSON.parse('{"id":"api/type-aliases/CustomSeriesPricePlotValues","title":"Type alias: CustomSeriesPricePlotValues","description":"CustomSeriesPricePlotValues: number[]","source":"@site/docs/api/type-aliases/CustomSeriesPricePlotValues.md","sourceDirName":"api/type-aliases","slug":"/api/type-aliases/CustomSeriesPricePlotValues","permalink":"/lightweight-charts/docs/next/api/type-aliases/CustomSeriesPricePlotValues","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"pagination_next":null,"pagination_prev":null},"sidebar":"typedocSidebar"}'),r=s("85893"),l=s("50065");let i={pagination_next:null,pagination_prev:null},a="Type alias: CustomSeriesPricePlotValues",o={},u=[];function c(e){let t={blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"type-alias-customseriespriceplotvalues",children:"Type alias: CustomSeriesPricePlotValues"})}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"CustomSeriesPricePlotValues"}),": ",(0,r.jsx)(t.code,{children:"number"}),"[]"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Price values for the custom series. This list should include the largest, smallest, and current price values for the data point.\nThe last value in the array will be used for the current value. You shouldn't need to\nhave more than 3 values in this array since the library only needs a largest, smallest, and current value."}),"\n",(0,r.jsx)(t.p,{children:"Examples:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"For a line series, this would contain a single number representing the current value."}),"\n",(0,r.jsx)(t.li,{children:"For a candle series, this would contain the high, low, and close values. Where the last value would be the close value."}),"\n"]})]})}function d(e={}){let{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},50065:function(e,t,s){s.d(t,{Z:function(){return a},a:function(){return i}});var n=s(67294);let r={},l=n.createContext(r);function i(e){let t=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);